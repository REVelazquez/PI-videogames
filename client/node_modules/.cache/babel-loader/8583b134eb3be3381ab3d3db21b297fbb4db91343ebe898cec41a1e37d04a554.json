{"ast":null,"code":"const regex = /^[a-zA-Z0-9 ,.()?!¿¡-]*$/;\nconst foundGenre = allGenres.find(genre => gameData.genres.includes(genre));\nconst Validation = (gameData, error, setError, allGenres) => {\n  // Errores en nombre\n  if (gameData.name && !regex.test(gameData.name)) {\n    setError({\n      ...error,\n      name: 'Invalid Name'\n    });\n  }\n  if (gameData.name.length === 2) {\n    setError({\n      ...error,\n      name: 'The name is too short!'\n    });\n  }\n  if (gameData.name.length > 70) {\n    setError({\n      ...error,\n      name: 'The name of the game is too large!'\n    });\n  }\n  // Errores en descripcion\n  if (gameData.description.length === 10) {\n    setError({\n      ...error,\n      description: 'The description is too short!'\n    });\n  }\n  if (gameData.description.length >= 400) {\n    setError({\n      ...error,\n      description: 'The description is too large!'\n    });\n  }\n  // Errores en rating\n  if (gameData.rating < 0) {\n    setError({\n      ...error,\n      rating: \"Even if you don't like the game, minimum rating is 0\"\n    });\n  }\n  if (gameData.rating > 5) {\n    setError({\n      ...error,\n      rating: 'Sadly the max rate is 5'\n    });\n  }\n\n  // Errores en genres\n  if (!foundGenre) {\n    setError({\n      ...error,\n      genres: `You need to choose at least one of the following valid genres ${allGenres}`\n    });\n  }\n  if (gameData.genres.length > 3) {\n    setError({\n      ...error,\n      genres: \"There's too many genres!\"\n    });\n  }\n};\n_c = Validation;\nexport default Validation;\nvar _c;\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"names":["regex","foundGenre","allGenres","find","genre","gameData","genres","includes","Validation","error","setError","name","test","length","description","rating","_c","$RefreshReg$"],"sources":["C:/Users/rodri/Desktop/PI-Videogames/PI-videogames/client/src/React components/Form/Validation.js"],"sourcesContent":["const regex = /^[a-zA-Z0-9 ,.()?!¿¡-]*$/;\r\nconst foundGenre = allGenres.find((genre) => gameData.genres.includes(genre));\r\n\r\nconst Validation = (gameData, error, setError, allGenres) => {\r\n  // Errores en nombre\r\n  if (gameData.name && !regex.test(gameData.name)) {\r\n    setError({ ...error, name: 'Invalid Name' });\r\n  }\r\n  if (gameData.name.length === 2) {\r\n    setError({ ...error, name: 'The name is too short!' })\r\n  }\r\n  if (gameData.name.length > 70) {\r\n    setError({ ...error, name: 'The name of the game is too large!' });\r\n  }\r\n  // Errores en descripcion\r\n  if (gameData.description.length === 10) {\r\n    setError({ ...error, description: 'The description is too short!' });\r\n  }\r\n  if (gameData.description.length >= 400) {\r\n    setError({ ...error, description: 'The description is too large!' });\r\n  }\r\n  // Errores en rating\r\n  if (gameData.rating < 0) {\r\n    setError({ ...error, rating: \"Even if you don't like the game, minimum rating is 0\" });\r\n  }\r\n  if (gameData.rating > 5) {\r\n    setError({ ...error, rating: 'Sadly the max rate is 5' });\r\n  }\r\n\r\n  // Errores en genres\r\n  if (!foundGenre) {\r\n    setError({ ...error, genres: `You need to choose at least one of the following valid genres ${allGenres}` });\r\n  }\r\n  if (gameData.genres.length > 3) {\r\n    setError({ ...error, genres: \"There's too many genres!\" });\r\n  }\r\n}\r\n\r\nexport default Validation;\r\n"],"mappings":"AAAA,MAAMA,KAAK,GAAG,0BAA0B;AACxC,MAAMC,UAAU,GAAGC,SAAS,CAACC,IAAI,CAAEC,KAAK,IAAKC,QAAQ,CAACC,MAAM,CAACC,QAAQ,CAACH,KAAK,CAAC,CAAC;AAE7E,MAAMI,UAAU,GAAGA,CAACH,QAAQ,EAAEI,KAAK,EAAEC,QAAQ,EAAER,SAAS,KAAK;EAC3D;EACA,IAAIG,QAAQ,CAACM,IAAI,IAAI,CAACX,KAAK,CAACY,IAAI,CAACP,QAAQ,CAACM,IAAI,CAAC,EAAE;IAC/CD,QAAQ,CAAC;MAAE,GAAGD,KAAK;MAAEE,IAAI,EAAE;IAAe,CAAC,CAAC;EAC9C;EACA,IAAIN,QAAQ,CAACM,IAAI,CAACE,MAAM,KAAK,CAAC,EAAE;IAC9BH,QAAQ,CAAC;MAAE,GAAGD,KAAK;MAAEE,IAAI,EAAE;IAAyB,CAAC,CAAC;EACxD;EACA,IAAIN,QAAQ,CAACM,IAAI,CAACE,MAAM,GAAG,EAAE,EAAE;IAC7BH,QAAQ,CAAC;MAAE,GAAGD,KAAK;MAAEE,IAAI,EAAE;IAAqC,CAAC,CAAC;EACpE;EACA;EACA,IAAIN,QAAQ,CAACS,WAAW,CAACD,MAAM,KAAK,EAAE,EAAE;IACtCH,QAAQ,CAAC;MAAE,GAAGD,KAAK;MAAEK,WAAW,EAAE;IAAgC,CAAC,CAAC;EACtE;EACA,IAAIT,QAAQ,CAACS,WAAW,CAACD,MAAM,IAAI,GAAG,EAAE;IACtCH,QAAQ,CAAC;MAAE,GAAGD,KAAK;MAAEK,WAAW,EAAE;IAAgC,CAAC,CAAC;EACtE;EACA;EACA,IAAIT,QAAQ,CAACU,MAAM,GAAG,CAAC,EAAE;IACvBL,QAAQ,CAAC;MAAE,GAAGD,KAAK;MAAEM,MAAM,EAAE;IAAuD,CAAC,CAAC;EACxF;EACA,IAAIV,QAAQ,CAACU,MAAM,GAAG,CAAC,EAAE;IACvBL,QAAQ,CAAC;MAAE,GAAGD,KAAK;MAAEM,MAAM,EAAE;IAA0B,CAAC,CAAC;EAC3D;;EAEA;EACA,IAAI,CAACd,UAAU,EAAE;IACfS,QAAQ,CAAC;MAAE,GAAGD,KAAK;MAAEH,MAAM,EAAG,iEAAgEJ,SAAU;IAAE,CAAC,CAAC;EAC9G;EACA,IAAIG,QAAQ,CAACC,MAAM,CAACO,MAAM,GAAG,CAAC,EAAE;IAC9BH,QAAQ,CAAC;MAAE,GAAGD,KAAK;MAAEH,MAAM,EAAE;IAA2B,CAAC,CAAC;EAC5D;AACF,CAAC;AAAAU,EAAA,GAjCKR,UAAU;AAmChB,eAAeA,UAAU;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}