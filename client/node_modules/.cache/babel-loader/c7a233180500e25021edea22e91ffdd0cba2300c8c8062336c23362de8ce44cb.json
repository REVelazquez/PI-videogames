{"ast":null,"code":"import axios from 'axios';\nimport { GET_GAMES, GET_GAMES_BY_ID, GET_GENRES, POST_GAMES, ORIGIN_FILTERED_GAMES, GENRE_FILTERED_GAMES, RATING_ORDERED_GAMES, LETTERS_ORDERED_GAMES } from './action-types';\n\n//-----------------------Actions para rutas \"gets\"-----------------------//\nexport const getGame = name => {\n  return async dispatch => {\n    let payload = [];\n    try {\n      if (name) {\n        let info = await axios.get(`/videogames/name?=${name}`);\n        payload = info.results;\n      } else {\n        let info = await axios.get(`/videogames`);\n        payload = info.results;\n      }\n      return dispatch({\n        type: GET_GAMES,\n        payload: payload\n      });\n    } catch (error) {\n      return {\n        error: error.message\n      };\n    }\n  };\n};\nexport const getGamesById = async id => {\n  const url = `http://localhost:3001/videogames/${id}`;\n  return async dispatch => {\n    try {\n      const info = await axios.get(url);\n      return dispatch({\n        type: GET_GAMES_BY_ID,\n        payload: info\n      });\n    } catch (error) {\n      return {\n        error: error.message\n      };\n    }\n  };\n};\nexport const getGenres = async () => {\n  const url = `http://localhost:3001/genres`;\n  return async dispatch => {\n    try {\n      const info = await axios.get(url);\n      return dispatch({\n        type: GET_GENRES,\n        payload: info.result\n      });\n    } catch (error) {\n      return {\n        error: error.message\n      };\n    }\n  };\n};\n\n//-------------------------action para ruta post---------------------//\nexport const postGames = async () => {\n  const url = `http:localhost:3001/videogames`;\n  return async () => {\n    try {\n      let info = await axios.post(url);\n      return dispatch({\n        type: POST_GAMES,\n        payload: info.data\n      });\n    } catch (error) {\n      return {\n        error: error.message\n      };\n    }\n  };\n};\n\n//--------------------------actions de ordenamiento--------------------//\n\nexport const filterGamesByGenre = genre => {\n  return {\n    type: GENRE_FILTERED_GAMES,\n    payload: genre\n  };\n};\nexport const filterGamesByOrigin = origin => {\n  return {\n    type: ORIGIN_FILTERED_GAMES,\n    payload: origin\n  };\n};\nexport const orderGamesByLetter = letters => {\n  return {\n    type: LETTERS_ORDERED_GAMES,\n    payload: letters\n  };\n};\nexport const orderGamesByRating = rating => {\n  return {\n    type: RATING_ORDERED_GAMES,\n    payload: rating\n  };\n};","map":{"version":3,"names":["axios","GET_GAMES","GET_GAMES_BY_ID","GET_GENRES","POST_GAMES","ORIGIN_FILTERED_GAMES","GENRE_FILTERED_GAMES","RATING_ORDERED_GAMES","LETTERS_ORDERED_GAMES","getGame","name","dispatch","payload","info","get","results","type","error","message","getGamesById","id","url","getGenres","result","postGames","post","data","filterGamesByGenre","genre","filterGamesByOrigin","origin","orderGamesByLetter","letters","orderGamesByRating","rating"],"sources":["C:/Users/rodri/Desktop/PI-Videogames/PI-videogames/client/src/redux/actions.js"],"sourcesContent":["import axios from 'axios';\r\nimport {GET_GAMES, GET_GAMES_BY_ID, GET_GENRES, POST_GAMES, ORIGIN_FILTERED_GAMES, GENRE_FILTERED_GAMES, RATING_ORDERED_GAMES, LETTERS_ORDERED_GAMES } from './action-types'\r\n\r\n\r\n//-----------------------Actions para rutas \"gets\"-----------------------//\r\nexport const getGame = (name)=>{\r\n    return async(dispatch) => {\r\n        let payload = []\r\n        try{\r\n            if(name){\r\n                let info = await axios.get(`/videogames/name?=${name}`);\r\n                payload=info.results\r\n            } else {\r\n                let info = await axios.get(`/videogames`);   \r\n                payload=info.results\r\n            }\r\n            return dispatch({\r\n                type:GET_GAMES,\r\n                payload:payload\r\n            })\r\n        } catch(error){\r\n            return ({error:error.message});   \r\n        }\r\n    }\r\n}\r\n\r\nexport const getGamesById= async(id)=>{\r\n    const url=`http://localhost:3001/videogames/${id}`\r\n    return async (dispatch)=>{\r\n        try {\r\n            const info= await axios.get(url)\r\n            return dispatch({\r\n                type:GET_GAMES_BY_ID,\r\n                payload:info\r\n            })\r\n        } catch (error) {\r\n            return {error:error.message}\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nexport const getGenres= async ()=>{\r\n    const url =`http://localhost:3001/genres`\r\n        return async (dispatch)=>{\r\n            try {\r\n                const info= await axios.get(url)\r\n                return dispatch({\r\n                    type:GET_GENRES,\r\n                    payload: info.result\r\n                })\r\n            } catch (error) {\r\n                return {error:error.message}\r\n            }\r\n        }\r\n}\r\n\r\n//-------------------------action para ruta post---------------------//\r\nexport const postGames= async ()=>{\r\n    const url = `http:localhost:3001/videogames`\r\n    return async ()=>{\r\n        try {\r\n            let info = await axios.post(url)\r\n            return dispatch({\r\n                type:POST_GAMES,\r\n                payload: info.data\r\n            })\r\n        } catch (error) {\r\n            return {error:error.message}\r\n        }\r\n    }\r\n    \r\n}\r\n\r\n//--------------------------actions de ordenamiento--------------------//\r\n\r\nexport const filterGamesByGenre = (genre)=>{\r\n    return {type:GENRE_FILTERED_GAMES, payload:genre}\r\n}\r\n\r\nexport const filterGamesByOrigin = (origin)=>{\r\n    return {type:ORIGIN_FILTERED_GAMES, payload: origin}\r\n}\r\n\r\nexport const orderGamesByLetter = (letters)=>{\r\n    return {type:LETTERS_ORDERED_GAMES, payload: letters}\r\n}\r\n\r\nexport const orderGamesByRating = (rating)=>{\r\n    return {type:RATING_ORDERED_GAMES, payload: rating}\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}