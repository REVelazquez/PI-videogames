{"ast":null,"code":"const regex = /^[a-zA-Z0-9 ,.()?!¿¡-]*$/;\nconst regexDate = /^(0[1-9]|1\\d|2\\d|3[01])[-\\/](0[1-9]|1[0-2])[-\\/](19|20)\\d{2}$/;\nconst Validation = (gameData, error, setError) => {\n  ////Errores en nombre\n  if (!regex.test(gameData.name)) {\n    setError({\n      ...error,\n      name: 'Invalid Name'\n    });\n  }\n};\n_c = Validation;\nif (gameData.name.length === 0) {\n  setError({\n    ...error,\n    name: 'The field is empty!'\n  });\n}\nif (gameData.name.length > 70) {\n  setError({\n    ...error,\n    name: 'The name of the game is too large!'\n  });\n}\n\n//// Errores en descripcion \nif (gameData.description.length === 0) {\n  setError({\n    ...error,\n    description: 'This is an obligatory element'\n  });\n}\nif (gameData.description.length >= 400) {\n  setError({\n    ...error,\n    description: 'The description is too large!'\n  });\n}\n//// Errores en rating\nif (gameData.rating > 0) {\n  setError({\n    ...error,\n    description: \"Even if you don't like the game, minimum rating is 0\"\n  });\n}\nif (gameData.rating < 5) {\n  setError({\n    ...error,\n    description: 'Sadly the max rate is 5'\n  });\n}\n\n//// Errores en genres\nif (gameData.genres.length === 0) {\n  setError({\n    ...error,\n    genres: 'You need to choose at least one genre'\n  });\n}\nif (gameData.genres.length > 3) {\n  setError({\n    ...error,\n    genres: \"There's too many genres!\"\n  });\n}\n/// Errores en date:\nif (gameData.release && !regexDate.test(gameData.name)) {\n  setError({\n    ...error,\n    rating: \"The date must be in the patter dd/mm/yyyy or dd-mm-yyyy\"\n  });\n}\nexport default Validation;\nvar _c;\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"names":["regex","regexDate","Validation","gameData","error","setError","test","name","_c","length","description","rating","genres","release","$RefreshReg$"],"sources":["C:/Users/rodri/Desktop/PI-Videogames/PI-videogames/client/src/React components/Form/Validation.js"],"sourcesContent":["const regex= /^[a-zA-Z0-9 ,.()?!¿¡-]*$/\r\nconst  regexDate= /^(0[1-9]|1\\d|2\\d|3[01])[-\\/](0[1-9]|1[0-2])[-\\/](19|20)\\d{2}$/\r\nconst Validation = (gameData, error, setError)=>{\r\n\r\n////Errores en nombre\r\n    if(!regex.test(gameData.name)) {setError({...error, name: 'Invalid Name'})}}\r\n    if(gameData.name.length === 0){setError({...error, name: 'The field is empty!'})}\r\n    if(gameData.name.length >70){setError({...error, name: 'The name of the game is too large!'})}\r\n    \r\n//// Errores en descripcion \r\n    if(gameData.description.length ===0 ){setError({...error, description: 'This is an obligatory element'})}\r\n    if(gameData.description.length >= 400){setError({...error, description: 'The description is too large!'})}\r\n//// Errores en rating\r\n    if(gameData.rating > 0){setError({...error, description:\"Even if you don't like the game, minimum rating is 0\"})}\r\n    if(gameData.rating < 5){setError({...error, description:'Sadly the max rate is 5'})}\r\n\r\n//// Errores en genres\r\n    if(gameData.genres.length === 0){setError({...error, genres:'You need to choose at least one genre'})}\r\n    if(gameData.genres.length >3 ){setError({...error, genres: \"There's too many genres!\"})}\r\n/// Errores en date:\r\n    if(gameData.release && !regexDate.test(gameData.name)){setError({...error, rating:\"The date must be in the patter dd/mm/yyyy or dd-mm-yyyy\"})}\r\n\r\nexport default Validation"],"mappings":"AAAA,MAAMA,KAAK,GAAE,0BAA0B;AACvC,MAAOC,SAAS,GAAE,+DAA+D;AACjF,MAAMC,UAAU,GAAGA,CAACC,QAAQ,EAAEC,KAAK,EAAEC,QAAQ,KAAG;EAEhD;EACI,IAAG,CAACL,KAAK,CAACM,IAAI,CAACH,QAAQ,CAACI,IAAI,CAAC,EAAE;IAACF,QAAQ,CAAC;MAAC,GAAGD,KAAK;MAAEG,IAAI,EAAE;IAAc,CAAC,CAAC;EAAA;AAAC,CAAC;AAAAC,EAAA,GAH1EN,UAAU;AAIZ,IAAGC,QAAQ,CAACI,IAAI,CAACE,MAAM,KAAK,CAAC,EAAC;EAACJ,QAAQ,CAAC;IAAC,GAAGD,KAAK;IAAEG,IAAI,EAAE;EAAqB,CAAC,CAAC;AAAA;AAChF,IAAGJ,QAAQ,CAACI,IAAI,CAACE,MAAM,GAAE,EAAE,EAAC;EAACJ,QAAQ,CAAC;IAAC,GAAGD,KAAK;IAAEG,IAAI,EAAE;EAAoC,CAAC,CAAC;AAAA;;AAEjG;AACI,IAAGJ,QAAQ,CAACO,WAAW,CAACD,MAAM,KAAI,CAAC,EAAE;EAACJ,QAAQ,CAAC;IAAC,GAAGD,KAAK;IAAEM,WAAW,EAAE;EAA+B,CAAC,CAAC;AAAA;AACxG,IAAGP,QAAQ,CAACO,WAAW,CAACD,MAAM,IAAI,GAAG,EAAC;EAACJ,QAAQ,CAAC;IAAC,GAAGD,KAAK;IAAEM,WAAW,EAAE;EAA+B,CAAC,CAAC;AAAA;AAC7G;AACI,IAAGP,QAAQ,CAACQ,MAAM,GAAG,CAAC,EAAC;EAACN,QAAQ,CAAC;IAAC,GAAGD,KAAK;IAAEM,WAAW,EAAC;EAAsD,CAAC,CAAC;AAAA;AAChH,IAAGP,QAAQ,CAACQ,MAAM,GAAG,CAAC,EAAC;EAACN,QAAQ,CAAC;IAAC,GAAGD,KAAK;IAAEM,WAAW,EAAC;EAAyB,CAAC,CAAC;AAAA;;AAEvF;AACI,IAAGP,QAAQ,CAACS,MAAM,CAACH,MAAM,KAAK,CAAC,EAAC;EAACJ,QAAQ,CAAC;IAAC,GAAGD,KAAK;IAAEQ,MAAM,EAAC;EAAuC,CAAC,CAAC;AAAA;AACrG,IAAGT,QAAQ,CAACS,MAAM,CAACH,MAAM,GAAE,CAAC,EAAE;EAACJ,QAAQ,CAAC;IAAC,GAAGD,KAAK;IAAEQ,MAAM,EAAE;EAA0B,CAAC,CAAC;AAAA;AAC3F;AACI,IAAGT,QAAQ,CAACU,OAAO,IAAI,CAACZ,SAAS,CAACK,IAAI,CAACH,QAAQ,CAACI,IAAI,CAAC,EAAC;EAACF,QAAQ,CAAC;IAAC,GAAGD,KAAK;IAAEO,MAAM,EAAC;EAAyD,CAAC,CAAC;AAAA;AAEjJ,eAAeT,UAAU;AAAA,IAAAM,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}