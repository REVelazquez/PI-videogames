{"ast":null,"code":"import { GET_GAMES, GET_GAMES_BY_ID, GET_GENRES, POST_GAMES, ORIGIN_FILTERED_GAMES, GENRE_FILTERED_GAMES, RATING_ORDERED_GAMES, LETTERS_ORDERED_GAMES, GET_GAMES_BY_NAME } from './action-types';\nconst initialState = {\n  allVideogames: [],\n  genres: [],\n  filteredGames: [],\n  orderedGames: [],\n  detail: {}\n};\n\n//----en la siguiente linea inicio el reducer, pasandole por parametros el stado inicial y las actions destructuradas--//\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n  // utilizo un switch para no hacer \"if\" encadenados o en cascadas.\n  switch (type) {\n    ///casos de recuperacion de datos o de carga de los mismos\n    case GET_GAMES:\n      return {\n        ...state,\n        allVideogames: payload,\n        filteredGames: payload\n      };\n    case GET_GAMES_BY_NAME:\n      return {\n        ...state,\n        filteredGames: payload\n      };\n    case GET_GAMES_BY_ID:\n      return {\n        ...state,\n        detail: payload\n      };\n    case GET_GENRES:\n      return {\n        ...state,\n        genres: payload\n      };\n    case POST_GAMES:\n      return {\n        ...state\n      };\n    //casos de ordenamiento o filtrado\n    case ORIGIN_FILTERED_GAMES:\n      const filteredFrom = payload === 'db' ? [...state.allVideogames].filter(game => isNaN(parseInt(game.id))) : payload === 'api' ? [...state.allVideogames].filter(game => !isNaN(parseInt(game.id))) : [...state.allVideogames];\n      return {\n        ...state,\n        filteredGames: filteredFrom\n      };\n    case GENRE_FILTERED_GAMES:\n      let genreFiltered = state.genres.find(genre => genre.name === payload);\n      const genreFilteredGames = [...state.allVideogames].filter(game => {\n        var _game$genres;\n        return (_game$genres = game.genres) === null || _game$genres === void 0 ? void 0 : _game$genres.some(genre => genre.name === (genreFiltered === null || genreFiltered === void 0 ? void 0 : genreFiltered.name));\n      });\n      if (payload === 'All') return {\n        ...state\n      };else {\n        return {\n          ...state,\n          genreFilteredGames\n        };\n      }\n    case RATING_ORDERED_GAMES:\n      const allVideogamesCopy = [...state.allVideogames];\n      const orderedGames = payload === 'A' ? allVideogamesCopy.sort((a, b) => a.rating - b.rating) : payload === 'D' ? allVideogamesCopy.sort((a, b) => b.rating - a.rating) : [...state.allVideogames];\n      return {\n        ...state,\n        orderedGames: orderedGames\n      };\n    case LETTERS_ORDERED_GAMES:\n      const allVideogamesCopy2 = [...state.allVideogames];\n      const orderedGamesByName = payload === 'A-Z' ? allVideogamesCopy2.sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase())) : payload === 'Z-A' ? allVideogamesCopy2.sort((a, b) => b.name.toLowerCase().localeCompare(a.name.toLowerCase())) : [...state.allVideogames];\n      return {\n        ...state,\n        orderedGames: orderedGamesByName\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default reducer;","map":{"version":3,"names":["GET_GAMES","GET_GAMES_BY_ID","GET_GENRES","POST_GAMES","ORIGIN_FILTERED_GAMES","GENRE_FILTERED_GAMES","RATING_ORDERED_GAMES","LETTERS_ORDERED_GAMES","GET_GAMES_BY_NAME","initialState","allVideogames","genres","filteredGames","orderedGames","detail","reducer","state","arguments","length","undefined","type","payload","filteredFrom","filter","game","isNaN","parseInt","id","genreFiltered","find","genre","name","genreFilteredGames","_game$genres","some","allVideogamesCopy","sort","a","b","rating","allVideogamesCopy2","orderedGamesByName","toLowerCase","localeCompare"],"sources":["C:/Users/rodri/Desktop/PI-Videogames/PI-videogames/client/src/redux/reducer.js"],"sourcesContent":["\r\nimport {GET_GAMES, GET_GAMES_BY_ID, GET_GENRES, POST_GAMES, ORIGIN_FILTERED_GAMES, GENRE_FILTERED_GAMES, RATING_ORDERED_GAMES, LETTERS_ORDERED_GAMES, GET_GAMES_BY_NAME } from './action-types'\r\n\r\nconst initialState={\r\n    allVideogames:[],\r\n    genres:[],\r\n    filteredGames: [],\r\n    orderedGames:[],\r\n    detail: {}\r\n}\r\n\r\n//----en la siguiente linea inicio el reducer, pasandole por parametros el stado inicial y las actions destructuradas--//\r\nconst reducer= (state = initialState, {type, payload})=>{\r\n\r\n// utilizo un switch para no hacer \"if\" encadenados o en cascadas.\r\n    switch(type){\r\n///casos de recuperacion de datos o de carga de los mismos\r\n        case GET_GAMES:\r\n            return{\r\n            ...state,\r\n            allVideogames:payload,\r\n            filteredGames:payload,\r\n\r\n        }\r\n        case GET_GAMES_BY_NAME:\r\n            return{\r\n                ...state,\r\n                filteredGames:payload\r\n            }\r\n        case GET_GAMES_BY_ID:\r\n            return{\r\n                ...state,\r\n                detail:payload,\r\n            }\r\n        case GET_GENRES:\r\n            return{\r\n                ...state,\r\n                genres:payload\r\n            }\r\n        case POST_GAMES:\r\n            return{\r\n                ...state,\r\n            }\r\n//casos de ordenamiento o filtrado\r\ncase ORIGIN_FILTERED_GAMES:\r\n    const filteredFrom =\r\n      payload === 'db'\r\n        ? [...state.allVideogames].filter((game) => isNaN(parseInt(game.id)))\r\n        : payload === 'api'\r\n        ? [...state.allVideogames].filter((game) => !isNaN(parseInt(game.id)))\r\n        : [...state.allVideogames];\r\n        return {\r\n            ...state,\r\n            filteredGames:filteredFrom,\r\n        }\r\n        case GENRE_FILTERED_GAMES:\r\n            let genreFiltered = state.genres.find((genre) => genre.name === payload);\r\n            const genreFilteredGames = [...state.allVideogames].filter(\r\n              (game) => game.genres?.some((genre) => genre.name === genreFiltered?.name)\r\n            );\r\n            if (payload === 'All') return{\r\n                ...state,\r\n            }\r\n            else{\r\n                return{\r\n                    ...state,\r\n                    genreFilteredGames,\r\n                } \r\n            }\r\n        case RATING_ORDERED_GAMES:\r\n            const allVideogamesCopy = [...state.allVideogames];\r\n            const orderedGames = \r\n              payload === 'A' ? allVideogamesCopy.sort((a, b) => a.rating - b.rating)\r\n            : payload === 'D' ? allVideogamesCopy.sort((a, b) => b.rating - a.rating)\r\n            : [...state.allVideogames];\r\n         return {\r\n            ...state,\r\n            orderedGames: orderedGames,\r\n        };\r\n            case LETTERS_ORDERED_GAMES:\r\n                const allVideogamesCopy2 = [...state.allVideogames];\r\n                const orderedGamesByName = payload === 'A-Z'\r\n                  ? allVideogamesCopy2.sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()))\r\n                  : payload === 'Z-A'\r\n                  ? allVideogamesCopy2.sort((a, b) => b.name.toLowerCase().localeCompare(a.name.toLowerCase()))\r\n                  : [...state.allVideogames];\r\n                return {\r\n                  ...state,\r\n                  orderedGames: orderedGamesByName,\r\n                };\r\n        default:\r\n           return { ...state};\r\n    }\r\n}\r\n\r\nexport default reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}