{"ast":null,"code":"const regex = /^[a-zA-Z0-9 ,.()?!¿¡-]*$/;\nconst regexDate = /^(0[1-9]|1\\d|2\\d|3[01])[-\\/](0[1-9]|1[0-2])[-\\/](19|20)\\d{2}$/;\nconst Validation = (gameData, error, setError) => {\n  // Errores en nombre\n  if (gameData.name && !regex.test(gameData.name)) {\n    setError({\n      ...error,\n      name: 'Invalid Name'\n    });\n  }\n  if (gameData.name.length === 2) {\n    setError({\n      ...error,\n      name: 'The name is too short!'\n    });\n  }\n  if (gameData.name.length > 70) {\n    setError({\n      ...error,\n      name: 'The name of the game is too large!'\n    });\n  }\n\n  // Errores en descripcion\n  if (gameData.description.length === 10) {\n    setError({\n      ...error,\n      description: 'The description is too short!'\n    });\n  }\n  if (gameData.description.length >= 400) {\n    setError({\n      ...error,\n      description: 'The description is too large!'\n    });\n  }\n\n  // Errores en rating\n  if (gameData.rating.value > 0) {\n    setError({\n      ...error,\n      rating: \"Even if you don't like the game, minimum rating is 0\"\n    });\n  }\n  if (gameData.rating.value < 5) {\n    setError({\n      ...error,\n      description: 'Sadly the max rate is 5'\n    });\n  }\n\n  // Errores en genres\n  if (gameData.genres.length === 0) {\n    setError({\n      ...error,\n      genres: 'You need to choose at least one genre'\n    });\n  }\n  if (gameData.genres.length > 3) {\n    setError({\n      ...error,\n      genres: \"There's too many genres!\"\n    });\n  }\n\n  // Errores en date:\n  if (gameData.release && !regexDate.test(gameData.release)) {\n    setError({\n      ...error,\n      rating: \"The date must be in the pattern dd/mm/yyyy or dd-mm-yyyy\"\n    });\n  }\n};\n_c = Validation;\nexport default Validation;\nvar _c;\n$RefreshReg$(_c, \"Validation\");","map":{"version":3,"names":["regex","regexDate","Validation","gameData","error","setError","name","test","length","description","rating","value","genres","release","_c","$RefreshReg$"],"sources":["C:/Users/rodri/Desktop/PI-Videogames/PI-videogames/client/src/React components/Form/Validation.js"],"sourcesContent":["const regex = /^[a-zA-Z0-9 ,.()?!¿¡-]*$/;\r\nconst regexDate = /^(0[1-9]|1\\d|2\\d|3[01])[-\\/](0[1-9]|1[0-2])[-\\/](19|20)\\d{2}$/;\r\n\r\nconst Validation = (gameData, error, setError) => {\r\n  // Errores en nombre\r\n  if (gameData.name && !regex.test(gameData.name)) {\r\n    setError({ ...error, name: 'Invalid Name' });\r\n  }\r\n  if (gameData.name.length === 2) {\r\n    setError({ ...error, name: 'The name is too short!' });\r\n  }\r\n  if (gameData.name.length > 70) {\r\n    setError({ ...error, name: 'The name of the game is too large!' });\r\n  }\r\n\r\n  // Errores en descripcion\r\n  if (gameData.description.length === 10) {\r\n    setError({ ...error, description: 'The description is too short!' });\r\n  }\r\n  if (gameData.description.length >= 400) {\r\n    setError({ ...error, description: 'The description is too large!' });\r\n  }\r\n\r\n  // Errores en rating\r\n  if (gameData.rating.value > 0) {\r\n    setError({ ...error, rating: \"Even if you don't like the game, minimum rating is 0\" });\r\n  }\r\n  if (gameData.rating.value < 5) {\r\n    setError({ ...error, description: 'Sadly the max rate is 5' });\r\n  }\r\n\r\n  // Errores en genres\r\n  if (gameData.genres.length === 0) {\r\n    setError({ ...error, genres: 'You need to choose at least one genre' });\r\n  }\r\n  if (gameData.genres.length > 3) {\r\n    setError({ ...error, genres: \"There's too many genres!\" });\r\n  }\r\n\r\n  // Errores en date:\r\n  if (gameData.release && !regexDate.test(gameData.release)) {\r\n    setError({ ...error, rating: \"The date must be in the pattern dd/mm/yyyy or dd-mm-yyyy\" });\r\n  }\r\n};\r\n\r\nexport default Validation;\r\n"],"mappings":"AAAA,MAAMA,KAAK,GAAG,0BAA0B;AACxC,MAAMC,SAAS,GAAG,+DAA+D;AAEjF,MAAMC,UAAU,GAAGA,CAACC,QAAQ,EAAEC,KAAK,EAAEC,QAAQ,KAAK;EAChD;EACA,IAAIF,QAAQ,CAACG,IAAI,IAAI,CAACN,KAAK,CAACO,IAAI,CAACJ,QAAQ,CAACG,IAAI,CAAC,EAAE;IAC/CD,QAAQ,CAAC;MAAE,GAAGD,KAAK;MAAEE,IAAI,EAAE;IAAe,CAAC,CAAC;EAC9C;EACA,IAAIH,QAAQ,CAACG,IAAI,CAACE,MAAM,KAAK,CAAC,EAAE;IAC9BH,QAAQ,CAAC;MAAE,GAAGD,KAAK;MAAEE,IAAI,EAAE;IAAyB,CAAC,CAAC;EACxD;EACA,IAAIH,QAAQ,CAACG,IAAI,CAACE,MAAM,GAAG,EAAE,EAAE;IAC7BH,QAAQ,CAAC;MAAE,GAAGD,KAAK;MAAEE,IAAI,EAAE;IAAqC,CAAC,CAAC;EACpE;;EAEA;EACA,IAAIH,QAAQ,CAACM,WAAW,CAACD,MAAM,KAAK,EAAE,EAAE;IACtCH,QAAQ,CAAC;MAAE,GAAGD,KAAK;MAAEK,WAAW,EAAE;IAAgC,CAAC,CAAC;EACtE;EACA,IAAIN,QAAQ,CAACM,WAAW,CAACD,MAAM,IAAI,GAAG,EAAE;IACtCH,QAAQ,CAAC;MAAE,GAAGD,KAAK;MAAEK,WAAW,EAAE;IAAgC,CAAC,CAAC;EACtE;;EAEA;EACA,IAAIN,QAAQ,CAACO,MAAM,CAACC,KAAK,GAAG,CAAC,EAAE;IAC7BN,QAAQ,CAAC;MAAE,GAAGD,KAAK;MAAEM,MAAM,EAAE;IAAuD,CAAC,CAAC;EACxF;EACA,IAAIP,QAAQ,CAACO,MAAM,CAACC,KAAK,GAAG,CAAC,EAAE;IAC7BN,QAAQ,CAAC;MAAE,GAAGD,KAAK;MAAEK,WAAW,EAAE;IAA0B,CAAC,CAAC;EAChE;;EAEA;EACA,IAAIN,QAAQ,CAACS,MAAM,CAACJ,MAAM,KAAK,CAAC,EAAE;IAChCH,QAAQ,CAAC;MAAE,GAAGD,KAAK;MAAEQ,MAAM,EAAE;IAAwC,CAAC,CAAC;EACzE;EACA,IAAIT,QAAQ,CAACS,MAAM,CAACJ,MAAM,GAAG,CAAC,EAAE;IAC9BH,QAAQ,CAAC;MAAE,GAAGD,KAAK;MAAEQ,MAAM,EAAE;IAA2B,CAAC,CAAC;EAC5D;;EAEA;EACA,IAAIT,QAAQ,CAACU,OAAO,IAAI,CAACZ,SAAS,CAACM,IAAI,CAACJ,QAAQ,CAACU,OAAO,CAAC,EAAE;IACzDR,QAAQ,CAAC;MAAE,GAAGD,KAAK;MAAEM,MAAM,EAAE;IAA2D,CAAC,CAAC;EAC5F;AACF,CAAC;AAACI,EAAA,GAxCIZ,UAAU;AA0ChB,eAAeA,UAAU;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}